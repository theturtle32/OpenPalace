<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/halo" minWidth="1024" minHeight="768"
	skinClass="FlashPalaceApplicationSkin"
	creationComplete="handleCreationComplete()" xmlns:code="http://code.google.com/p/flexlib/" xmlns:view="net.codecomposer.palace.view.*" xmlns:local="*">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>

	<fx:Script>
		<![CDATA[
			import flexlib.mdi.events.MDIWindowEvent;
			import spark.components.ButtonBarButton;
			import net.codecomposer.palace.view.UserListGrid;
			import mx.events.PropertyChangeEvent;
			import mx.binding.utils.ChangeWatcher;
			import net.codecomposer.palace.rpc.PalaceClient;
			[Bindable]
			public var palace:PalaceClient = PalaceClient.getInstance();

			private var connectWindow:ConnectWindow;
			private var roomListWindow:RoomListWindow;
			private var userListWindow:UserListWindow;
			private var logWindow:LogWindow;

			private function handleCreationComplete():void {
				ChangeWatcher.watch(palace, 'connected', handleConnectedChange);
				showConnectWindow();
			}
			
			private function handleConnectedChange(event:PropertyChangeEvent):void {
				if (palace.connected) {
					mdic.windowManager.remove(connectWindow);
				}
			}
			
			private function disconnect():void {
				palace.disconnect();
			}
			
			private function showConnectWindow():void {
				if (!connectWindow) {
					connectWindow = new ConnectWindow();
				}
				mdic.windowManager.add(connectWindow);
				mdic.windowManager.bringToFront(connectWindow);
			}
			
			private function showLogWindow():void {
				logWindow = new LogWindow();
				logWindow.addEventListener(MDIWindowEvent.CLOSE, function(event:Event):void {
					logButton.selected = false;
				});
				mdic.windowManager.add(logWindow);
			}
			
			private function hideLogWindow():void {
				mdic.windowManager.remove(logWindow);
				logWindow = null;
			}
			
			private function handleLogClick(event:MouseEvent):void {
				if (ButtonBarButton(event.target).selected) {
					showLogWindow();
				}
				else {
					hideLogWindow();
				}
			}
			
			private function showUserList():void {
				palace.requestUserList();
				userListWindow = new UserListWindow();
				userListWindow.addEventListener(MDIWindowEvent.CLOSE, function(event:Event):void {
					usersButton.selected = false;
				});
				mdic.windowManager.add(userListWindow);
			}
			
			private function hideUserList():void {
				mdic.windowManager.remove(userListWindow);
				userListWindow = null;
			}
			
			private function handleUsersClick(event:MouseEvent):void {
				if (ButtonBarButton(event.target).selected) {
					showUserList();
				}
				else {
					hideUserList();
				}
			}
						
			private function showRoomList():void {
				palace.requestRoomList();
				roomListWindow = new RoomListWindow();
				roomListWindow.addEventListener(MDIWindowEvent.CLOSE, function(event:Event):void {
					roomsButton.selected = false;
				});
				mdic.windowManager.add(roomListWindow);
			}
			
			private function hideRoomList():void {
				mdic.windowManager.remove(roomListWindow);
				roomListWindow = null;
			}
			
			private function handleRoomsClick(event:MouseEvent):void {
				if (ButtonBarButton(event.target).selected) {
					showRoomList();
				}
				else {
					hideRoomList();
				}
			}
			
		]]>
	</fx:Script>

	<s:HGroup top="5" left="5" gap="1">
		<!-- <s:ButtonBarButton label="Palaces" /> -->
		<s:ButtonBarButton id="roomsButton" label="Rooms" click="handleRoomsClick(event)" />
		<s:ButtonBarButton id="usersButton" label="Users" click="handleUsersClick(event)" />
		<s:ButtonBarButton id="logButton" label="Log" click="handleLogClick(event)" />
	</s:HGroup>
			
	
	<s:HGroup top="5" right="5" verticalAlign="middle">
		<s:SimpleText text="{palace.currentRoom.users.length}/{palace.population}" />
		<s:Button label="Disconnect" click="disconnect()" enabled="{palace.connected}" />
		<s:Button label="Connect" click="showConnectWindow()" />
		<s:CheckBox label="UTF-8 (Extended Characters)" id="useUTF8" selected="false" />
	</s:HGroup>

	<local:ChatWindow palace="{palace}" top="40" left="10" />	
	
	<code:MDICanvas id="mdic" width="100%" height="100%" >
	</code:MDICanvas>

</s:Application>
