<?xml version="1.0" encoding="utf-8"?>

<!--
This file is part of OpenPalace.

OpenPalace is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

OpenPalace is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with OpenPalace.  If not, see <http://www.gnu.org/licenses/>.
-->

<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical"
	backgroundColor="#444444"
	xmlns:view="net.codecomposer.palace.view.*"
	minHeight="384" minWidth="512"
	paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" 
	verticalGap="0"
	horizontalScrollPolicy="off"
	verticalScrollPolicy="off"
	title="{palace.serverName} - {palace.currentRoom.name}"
	horizontalAlign="center"
	verticalAlign="middle"
	showStatusBar="false"
	autoLayout="true"
	close="handleClose(event)"
	creationComplete="handleCreationComplete()" xmlns:local="*" viewSourceURL="srcview/index.html">
	<mx:Script>
		<![CDATA[
			import mx.events.ResizeEvent;
			import mx.events.AIREvent;
			import mx.events.PropertyChangeEvent;
			import net.codecomposer.palace.rpc.PalaceClient;
		
			
			[Bindable]
			public var palace:PalaceClient = PalaceClient.getInstance();
			
			private var roomListWindow:RoomListWindow = new RoomListWindow();
			private var userListWindow:UserListWindow = new UserListWindow();
			private var connectWindow:ConnectWindow = new ConnectWindow();
			private var logWindow:LogWindow = new LogWindow();
			private var propsWindow:PropsWindow = new PropsWindow();
			
			private function disconnect():void {
				palace.disconnect();
			}
			
			private function handleClose(close:Event):void {
				this.exit();
			}
			
			private function handleChatKeyDown(event:KeyboardEvent):void {
				if (event.keyCode == Keyboard.ENTER) {
					palace.say(chatBox.text);
					chatBox.text = "";
				}
			}
			
			private function openRoomList():void {
				palace.requestRoomList();
				if (roomListWindow.nativeWindow && roomListWindow.closed) {
					roomListWindow = new RoomListWindow();
				}
				roomListWindow.open();
				roomListWindow.activate();
			}
			
			private function openUserList():void {
				palace.requestUserList();
				if (userListWindow.nativeWindow && userListWindow.closed) {
					userListWindow = new UserListWindow();
				}
				userListWindow.open();
				userListWindow.activate();
			}
			
			private function handleCreationComplete():void {
				openConnectWindow();
				openLogWindow();
				updateWindowSize();
				roomView.addEventListener(ResizeEvent.RESIZE, updateWindowSize);
			}
			
			private function updateWindowSize(event:ResizeEvent = null):void {
				width = roomView.width;
				height = roomView.height + chatBox.height + 30;
			}
			
			private function openConnectWindow():void {
				if (connectWindow.nativeWindow && connectWindow.closed) {
					connectWindow = new ConnectWindow();
				}
				connectWindow.open();
				connectWindow.activate();
			}
			
			private function openLogWindow():void {
				if (logWindow.nativeWindow && logWindow.closed) {
					logWindow = new LogWindow();
				}
				logWindow.open();
				logWindow.nativeWindow.x = 10;
				logWindow.nativeWindow.y = 490;
				logWindow.activate();
			}
			
			private function openPropsWindow():void {
				if (propsWindow.nativeWindow && propsWindow.closed) {
					propsWindow = new PropsWindow();
				}
				propsWindow.open();
				propsWindow.nativeWindow.x = 575;
				propsWindow.nativeWindow.y = 10;
			}
			
		]]>
	</mx:Script>
	
	<mx:ApplicationControlBar id="controlBar" horizontalAlign="right" dock="true">
		<mx:Label color="#FFFFFF" text="{palace.currentRoom.users.length}/{palace.population}" />
		<mx:Spacer width="100%" />
		<mx:Button label="Log" click="openLogWindow()"/>
		<mx:Button label="Rooms" click="openRoomList()"/>
		<mx:Button label="Users" click="openUserList()"/>
		<mx:Button label="Disconnect" click="disconnect()" enabled="{palace.connected}" />
		<mx:Button label="Connect" click="openConnectWindow()" />
	</mx:ApplicationControlBar>

	<view:PalaceRoomView id="roomView" room="{palace.currentRoom}" mediaServer="{palace.mediaServer}" />
	<mx:TextInput width="100%" id="chatBox" keyDown="handleChatKeyDown(event);" maxChars="254"/>
	
	
</mx:WindowedApplication>
